{"ast":null,"code":"var _jsxFileName = \"/Users/Tuan/Desktop/FPT/Mock/Nike-ReactTs-CLient/src/components/admin/AcountSetting.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getDetailUser, deleteUser, putAccountSetting } from \"../../services/apis\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"../../services/store\";\nimport * as Yup from \"yup\";\nimport AuthenticatedGuard from \"../../components/auth/authentication/authenticatedGuard/AuthenticatedGuard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet rules = [\"user\"];\nexport const AccountSetting = _ref => {\n  _s();\n\n  let {\n    usersList\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const {\n    dataUser,\n    error\n  } = useAppSelector(state => state.authReducer);\n  const [reLoad, setReload] = useState(true);\n  const [userEditData, setUserEditData] = useState(null);\n  useEffect(() => {\n    getDetailUser(id).then(res => setUserEditData(res.data)).catch(err => console.log(err));\n  }, [reLoad]);\n  const {\n    nameInput,\n    message\n  } = useAppSelector(state => state.settingsReducer);\n\n  function handleDelete(id) {\n    deleteUser(id).then(res => {\n      alert(\"Delete user successfully!.Go back admin to check\");\n      history.push(\"/admin\");\n    });\n  }\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(AuthenticatedGuard, {\n    routeRules: rules,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-decoration-underline\",\n            children: \"Account Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-8 mx-auto\",\n          children: userEditData ? /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: userEditData.email,\n              newEmail: userEditData.email,\n              newPassword: \"\",\n              confirmPassword: \"\"\n            },\n            validationSchema: Yup.object().shape({\n              email: Yup.string().required(\"* Required!\"),\n              newEmail: Yup.string().required(\"* Required!\"),\n              newPassword: Yup.string().required(\"* Required!\"),\n              confirmPassword: Yup.string().required(\"* Required!\").oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n            }),\n            onSubmit: values => {\n              const dataBody = {\n                newEmail: values.newEmail,\n                newPassword: values.newPassword\n              };\n              putAccountSetting(userEditData.id, dataBody).then(res => {\n                setReload(!reLoad);\n                alert(\"Setting Successfully!\");\n                setTimeout(() => {\n                  history.push(\"/admin\");\n                }, 1000);\n              }).catch(error => {\n                alert(error.response.data.message);\n              });\n            },\n            children: props => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-12\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"font-weight-bold\",\n                      children: \"Account Settings\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Email:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      value: userEditData.email,\n                      disabled: true,\n                      id: \"email\",\n                      name: \"email\",\n                      type: \"email\",\n                      className: \"form-control my-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"email\",\n                      component: \"div\",\n                      className: \"text-danger\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"newEmail\",\n                        children: \"New Email:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        id: \"newEmail\",\n                        name: \"newEmail\",\n                        type: \"email\",\n                        className: \"form-control my-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"newEmail\",\n                        component: \"div\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-12\",\n                    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"font-weight-bold\",\n                      children: \"Change Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"newPassword\",\n                        children: \"New Password:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"password\",\n                        id: \"newPassword\",\n                        name: \"newPassword\",\n                        className: \"form-control my-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"password\",\n                        component: \"div\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"text-danger\",\n                        children: nameInput == \"password\" ? message : \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"password\",\n                        children: \"Confirm Password:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"password\",\n                        id: \"confirmPassword\",\n                        name: \"confirmPassword\",\n                        className: \"form-control my-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"confirmPassword\",\n                        component: \"div\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"text-danger\",\n                        children: nameInput == \"password\" ? message : \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \" d-flex justify-content-between py-2 w-100\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary my-2  me-2\",\n                    type: \"submit\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-warning me-2\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"/admin\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountSetting, \"sut/T88N9xJTMzbLL2/XF8CZFV8=\", false, function () {\n  return [useParams, useHistory, useAppSelector, useAppSelector, useDispatch];\n});\n\n_c = AccountSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSetting\");","map":{"version":3,"sources":["/Users/Tuan/Desktop/FPT/Mock/Nike-ReactTs-CLient/src/components/admin/AcountSetting.tsx"],"names":["useState","useEffect","ErrorMessage","Field","Form","Formik","useDispatch","Link","getDetailUser","deleteUser","putAccountSetting","useHistory","useParams","useAppSelector","Yup","AuthenticatedGuard","rules","AccountSetting","usersList","id","history","dataUser","error","state","authReducer","reLoad","setReload","userEditData","setUserEditData","then","res","data","catch","err","console","log","nameInput","message","settingsReducer","handleDelete","alert","push","dispatch","email","newEmail","newPassword","confirmPassword","object","shape","string","required","oneOf","ref","values","dataBody","setTimeout","response","props"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getDetailUser,\n  deleteUser,\n  putAccountSetting,\n} from \"../../services/apis\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"../../services/store\";\nimport * as Yup from \"yup\";\nimport AuthenticatedGuard from \"../../components/auth/authentication/authenticatedGuard/AuthenticatedGuard\";\nlet rules = [\"user\"];\ninterface Props {\n  usersList: Array<User>;\n}\nexport const AccountSetting: React.FC<Props> = ({ usersList }) => {\n  const { id } = useParams() as any;\n  const history = useHistory();\n  const { dataUser, error } = useAppSelector((state) => state.authReducer);\n  const [reLoad, setReload] = useState(true as boolean);\n  const [userEditData, setUserEditData] = useState(null as null | User);\n\n  useEffect(() => {\n    getDetailUser(id)\n      .then((res) => setUserEditData(res.data))\n      .catch((err) => console.log(err));\n  }, [reLoad]);\n  const { nameInput, message } = useAppSelector(\n    (state) => state.settingsReducer\n  );\n  function handleDelete(id: number) {\n    deleteUser(id).then((res) => {\n      alert(\"Delete user successfully!.Go back admin to check\");\n      history.push(\"/admin\");\n    });\n  }\n  const dispatch = useDispatch();\n  return (\n    <AuthenticatedGuard routeRules={rules}>\n      <div className=\"container my-3\">\n        <div className=\"row\">\n          <div className=\"col-sm-3\">\n            <h4 className=\"text-decoration-underline\">Account Settings</h4>\n          </div>\n          <div className=\"col-sm-8 mx-auto\">\n            {userEditData ? (\n              <Formik\n                initialValues={{\n                  email: userEditData.email,\n                  newEmail: userEditData.email,\n                  newPassword: \"\",\n                  confirmPassword: \"\",\n                }}\n                validationSchema={Yup.object().shape({\n                  email: Yup.string().required(\"* Required!\"),\n                  newEmail: Yup.string().required(\"* Required!\"),\n                  newPassword: Yup.string().required(\"* Required!\"),\n                  confirmPassword: Yup.string()\n                    .required(\"* Required!\")\n                    .oneOf(\n                      [Yup.ref(\"newPassword\"), null],\n                      \"Passwords must match\"\n                    ),\n                })}\n                onSubmit={(values) => {\n                  const dataBody: AccountSetting = {\n                    newEmail: values.newEmail,\n                    newPassword: values.newPassword,\n                  };\n                  putAccountSetting(userEditData.id, dataBody)\n                    .then((res) => {\n                      setReload(!reLoad);\n                      alert(\"Setting Successfully!\");\n                      setTimeout(() => {\n                        history.push(\"/admin\");\n                      }, 1000);\n                    })\n                    .catch((error) => {\n                      alert(error.response.data.message);\n                    });\n                }}\n              >\n                {(props) => (\n                  <Form>\n                    <div className=\"form-group\">\n                      <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                          <h5 className=\"font-weight-bold\">Account Settings</h5>\n                          <br />\n                          <label htmlFor=\"email\">Email:</label>\n                          <Field\n                            value={userEditData.email}\n                            disabled\n                            id=\"email\"\n                            name=\"email\"\n                            type=\"email\"\n                            className=\"form-control my-2\"\n                          />\n                          <ErrorMessage\n                            name=\"email\"\n                            component=\"div\"\n                            className=\"text-danger\"\n                          />\n                          <div className=\"form-group\">\n                            <label htmlFor=\"newEmail\">New Email:</label>\n                            <Field\n                              id=\"newEmail\"\n                              name=\"newEmail\"\n                              type=\"email\"\n                              className=\"form-control my-2\"\n                            />\n                            <ErrorMessage\n                              name=\"newEmail\"\n                              component=\"div\"\n                              className=\"text-danger\"\n                            />\n                          </div>\n                        </div>\n\n                        <div className=\"col-sm-12\">\n                          <br />\n                          <h5 className=\"font-weight-bold\">Change Password</h5>\n                          <br />\n                          <div className=\"form-group\">\n                            <label htmlFor=\"newPassword\">New Password:</label>\n                            <Field\n                              type=\"password\"\n                              id=\"newPassword\"\n                              name=\"newPassword\"\n                              className=\"form-control my-2\"\n                            />\n                            <ErrorMessage\n                              name=\"password\"\n                              component=\"div\"\n                              className=\"text-danger\"\n                            />\n                            <small className=\"text-danger\">\n                              {nameInput == \"password\" ? message : \"\"}\n                            </small>\n                          </div>\n                          <div className=\"form-group\">\n                            <label htmlFor=\"password\">Confirm Password:</label>\n                            <Field\n                              type=\"password\"\n                              id=\"confirmPassword\"\n                              name=\"confirmPassword\"\n                              className=\"form-control my-2\"\n                            />\n                            <ErrorMessage\n                              name=\"confirmPassword\"\n                              component=\"div\"\n                              className=\"text-danger\"\n                            />\n                            <small className=\"text-danger\">\n                              {nameInput == \"password\" ? message : \"\"}\n                            </small>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" d-flex justify-content-between py-2 w-100\">\n                      <div className=\"\">\n                        {\" \"}\n                        <button\n                          className=\"btn btn-primary my-2  me-2\"\n                          type=\"submit\"\n                        >\n                          Submit\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-warning me-2\"\n                        >\n                          <Link to=\"/admin\">Cancel</Link>\n                        </button>\n                      </div>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"col-sm-1\"></div>\n        </div>\n      </div>\n    </AuthenticatedGuard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}