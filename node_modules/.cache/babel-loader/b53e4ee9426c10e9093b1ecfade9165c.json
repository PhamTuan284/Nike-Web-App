{"ast":null,"code":"var _jsxFileName = \"/Users/Tuan/Desktop/FPT/Mock/Nike-ReactTs-CLient/src/components/admin/PasswordItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordItem = _ref => {\n  _s();\n\n  let {\n    password\n  } = _ref;\n  const [isShow, setIsShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isShow ? /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => setIsShow(false),\n      children: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: () => setIsShow(true),\n      className: \"bi bi-eye\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordItem, \"QAS7jQavpo8/PRZJtP6DvKqKKFE=\");\n\n_c = PasswordItem;\nexport default PasswordItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordItem\");","map":{"version":3,"sources":["/Users/Tuan/Desktop/FPT/Mock/Nike-ReactTs-CLient/src/components/admin/PasswordItem.tsx"],"names":["React","useState","PasswordItem","password","isShow","setIsShow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAKA,MAAMC,YAA6B,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACtD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;AACA,sBACE;AAAA,cACGG,MAAM,gBACL;AAAM,MAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAA9B;AAAA,gBAAwCF;AAAxC;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAG,MAAA,OAAO,EAAE,MAAME,SAAS,CAAC,IAAD,CAA3B;AAAmC,MAAA,SAAS,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAXD;;GAAMH,Y;;KAAAA,Y;AAaN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\n\ninterface Props {\n  password: string;\n}\nconst PasswordItem: React.FC<Props> = ({ password }) => {\n  const [isShow, setIsShow] = useState(false as boolean);\n  return (\n    <div>\n      {isShow ? (\n        <span onClick={() => setIsShow(false)}>{password}</span>\n      ) : (\n        <i onClick={() => setIsShow(true)} className=\"bi bi-eye\"></i>\n      )}\n    </div>\n  );\n};\n\nexport default PasswordItem;\n"]},"metadata":{},"sourceType":"module"}