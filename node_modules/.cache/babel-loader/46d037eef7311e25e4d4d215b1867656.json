{"ast":null,"code":"var _jsxFileName = \"/Users/Tuan/Desktop/FPT/Mock/Nike-ReactTs-CLient/src/components/admin/UsersList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { deleteUser } from \"../../services/apis\";\nimport PasswordItem from \"../../components/admin/PasswordItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserList = _ref => {\n  _s();\n\n  let {\n    usersList,\n    setUsersList,\n    setCurrentPageAdmin\n  } = _ref;\n  let listRoles = [{\n    id: \"admin\",\n    name: \"Senior administrator\"\n  }, {\n    id: \"user\",\n    name: \"User\"\n  }, {\n    id: \"product_admin\",\n    name: \"Product administrator\"\n  }, {\n    id: \"user_admin\",\n    name: \"User administrator\"\n  }];\n\n  function handleDelete(id) {\n    deleteUser(id).then(res => console.log(res)).catch(err => console.log(err));\n    let userListClone = [...usersList];\n    userListClone = userListClone.filter(product => product.id !== id);\n    setUsersList(userListClone);\n  }\n\n  useEffect(() => {\n    setCurrentPageAdmin(1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/admin/adduser\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-dark mb-4\",\n        children: \"Add user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark \",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Rules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: usersList ? usersList.map((user, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(PasswordItem, {\n                password: user.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.rules.map((rule, index) => {\n                var _listRoles$find;\n\n                return /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [listRoles === null || listRoles === void 0 ? void 0 : (_listRoles$find = listRoles.find(role => role.id == rule)) === null || _listRoles$find === void 0 ? void 0 : _listRoles$find.name, index != user.rules.length - 1 ? \", \" : \"\"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-group\",\n                role: \"group\",\n                \"aria-label\": \"Basic example\",\n                children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                  to: `/admin/setting/profile/${user.id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-dark\",\n                    children: \"Profile Setting\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: `/admin/setting/account/${user.id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-outline-dark\",\n                    children: \"Account Setting\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: `/admin/setting/roles/${user.id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-dark\",\n                    children: \"User Roles\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/Tuan/Desktop/FPT/Mock/Nike-ReactTs-CLient/src/components/admin/UsersList.tsx"],"names":["useEffect","NavLink","deleteUser","PasswordItem","UserList","usersList","setUsersList","setCurrentPageAdmin","listRoles","id","name","handleDelete","then","res","console","log","catch","err","userListClone","filter","product","map","user","index","email","password","rules","rule","find","role","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { deleteUser } from \"../../services/apis\";\nimport PasswordItem from \"../../components/admin/PasswordItem\";\ninterface Props {\n  usersList: Array<User>;\n  setUsersList: (value: Array<User>) => void;\n  setCurrentPageAdmin: (value: number) => void;\n}\n\nconst UserList: React.FC<Props> = ({\n  usersList,\n  setUsersList,\n  setCurrentPageAdmin,\n}) => {\n  let listRoles = [\n    { id: \"admin\", name: \"Senior administrator\" },\n    { id: \"user\", name: \"User\" },\n    { id: \"product_admin\", name: \"Product administrator\" },\n    { id: \"user_admin\", name: \"User administrator\" },\n  ];\n  function handleDelete(id: number) {\n    deleteUser(id)\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n\n    let userListClone = [...usersList];\n    userListClone = userListClone.filter((product) => product.id !== id);\n\n    setUsersList(userListClone);\n  }\n\n  useEffect(() => {\n    setCurrentPageAdmin(1);\n  }, []);\n\n  return (\n    <>\n      <NavLink to=\"/admin/adduser\">\n        <div className=\"btn btn-dark mb-4\">Add user</div>\n      </NavLink>\n\n      <table className=\"table table-striped table-hover\">\n        <thead className=\"table-dark \">\n          <tr>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Password</th>\n            <th scope=\"col\">Rules</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {usersList ? (\n            usersList.map((user,index) => {\n              return (\n                <tr key={user.id}>\n                  <td>{user.email}</td>\n                  <td>\n                    <PasswordItem password={user.password} />\n                  </td>\n                  <td>\n                    {user.rules.map((rule, index) => (\n                      <b key={index}>\n                        {listRoles?.find((role) => role.id == rule)?.name}\n                        {index != user.rules.length - 1 ? \", \" : \"\"}\n                      </b>\n                    ))}\n                  </td>\n                  <td>\n                    <div\n                      className=\"btn-group\"\n                      role=\"group\"\n                      aria-label=\"Basic example\"\n                    >\n                      <NavLink to={`/admin/setting/profile/${user.id}`}>\n                        <button type=\"button\" className=\"btn btn-dark\">\n                          Profile Setting\n                        </button>\n                      </NavLink>\n                      <NavLink to={`/admin/setting/account/${user.id}`}>\n                        <button type=\"button\" className=\"btn btn-outline-dark\">\n                          Account Setting\n                        </button>\n                      </NavLink>\n                      <NavLink to={`/admin/setting/roles/${user.id}`}>\n                        <button type=\"button\" className=\"btn btn-dark\">\n                          User Roles\n                        </button>\n                      </NavLink>\n                    </div>\n                  </td>\n                </tr>\n              );\n            })\n          ) : (\n            <></>\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}